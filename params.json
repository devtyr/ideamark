{"name":"Ideamark","tagline":"A simple node.js online container for your ideas, concepts and documentations using markdown","body":"# ideamark\r\n\r\n**ideamark** is an online container for your ideas, concepts and documentations based on [this-blog](https://github.com/skid/this-blog \"this-blog\") a simple blogging engine by [Dusko Jordanovski](https://github.com/skid \"Dusko Jordanovski\") written in node.js. All documents are written with Markdown markup.\r\n\r\n## Features\r\n\r\n- Simple publishing mechanism - use a single command\r\n- No database - all data is kept in files\r\n- Blog posts are single files and contain their own configuration\r\n- Can handle multiple languages\r\n- Can tag posts and dynamically build tag categories\r\n- Posts can have their own templates or use the provided master\r\n- File watcher to live-update pages\r\n- Document status\r\n\r\n## Installation\r\n\r\nTo use it, you will have to make 2 installations, one on your server and one on your local machine:\r\n\r\n    npm install ideamark\r\n\r\n## Usage\r\n\r\n#### Setting up\r\n\r\nBefore you start it, you need to edit the `settings.json` file in the root directory. Your local and remote installation **must** have the same settings for these options:\r\n\r\n    remoteUrl:    \"example.com\"\r\n    remotePort:   80\r\n    password:     \"icanhazcheezburger\"\r\n    contentDirs:  [\"posts\", \"templates\", \"static\"]\r\n    \r\nYou need to get these to be the same on your server and local installation. Everything else is configurable later. The `remoteUrl` and `remotePort` are the public URL and port of your blog. The `password` is used to authenticate you when you publish posts.\r\n\r\nYou can start your server by running \r\n\r\n    node server.js -s \r\n\r\non your server.\r\n\r\n#### Publishing\r\n\r\nTo upload posts, images and templates start adding them in one of the `contentDirs` that you defined. Normally your posts would go in the _posts_ directory, templates in the _templates_ directory, but **ideamark* uses only the file extension to make difference between posts and other files. Any file with the `.md` extension will be treated like a post.\r\n\r\nAfter you're done publish your changes by running \r\n\r\n    node server.js -p \r\n    \r\non your local machine.\r\n    \r\n### Configuration\r\n\r\nHere's an overview of the configuration options in the `settings.json` file:\r\n\r\n    port:        The port for the node server to listen to (if you use a proxy)\r\n    remotePort:  The public port for your blog (should be 80)\r\n    remoteUrl:   The public URL of your blog\r\n    password:    Authentication password - needs to be the same\r\n    contentDirs: Dirs scanned for content changes before publishing\r\n    gaCode:      Google Analytics key, empty string to not use Google Analytics\r\n    postsUrl:    Url path for posts (with leading slash)\r\n    tagsUrl:     Url path for tags (with leading slash)\r\n    statusUrl:   Url path for statuses\r\n    adminUrl:    Url path for publishing (passworded, with leading slash)\r\n    errorLog:    Error log filename \r\n    watchFiles:  Activates the file watcher to live-update your instance\r\n    useCaching:  Activates caching for files (will be deactivated if `watchFiles` is set to `true`)\r\n    maxExcerpts: Maximum number of posts shown on a tag/home page\r\n    pagination:  Maximum number of pagination links\r\n    languages:   List of languages - [\"en\", \"mk\"]\r\n    langinfo:    Hash of language names - {\"en\": \"English\", \"de\": \"Deutsch\"}\r\n    strings:     A hash of stranslation strings for each language\r\n\r\nAppart from the `settings.json` file, you can also configure your posts individually by using headers. A post filename should look like this:\r\n\r\n    This is my first post.en.md\r\n\r\nIt has to have the `md` extension for it to be treated like a post. The \".en\" part tells This Blog the language of the post. If it's ommitted, the first language in your `languages` settings will be used. To have the same post on another language, just do this:\r\n  \r\n    This is my first post.en.md  # English Version\r\n    This is my first post.de.md  # German Version\r\n\r\nPosts are further configured by using headers. All posts must start with a set of HTTP-like headers. Headers must be the first thing in the post file and **are over when the first instance of 2 consecutive newlines is found**\r\n\r\nHere's an example post file:\r\n\r\n    Language:     en                    # This is found in the filename \r\n    Title:        My First Post         # This appears as the title (<h1>)\r\n    Date:         2011-12-19            # Must be a date in the ISO format\r\n    Description:  Nothing special       # META description\r\n    Tags:         Blog, Node.js         # Post tags\r\n    Status:       inprogress            # use inprogress, finished or approved as a valid status for your documents\r\n\r\n    Notice the 2 new lines. This is the beginning of the post. We ommit the\r\n    title because it will be automatically added for us from the headers.\r\n    \r\n    This part is the post excerpt. Notice the 5 dashes in-between double \r\n    linebreaks (\\n\\n-----\\n\\n). That's the excerpt delimiter. Everything before\r\n    those dashes will appear in the list on the homepage/tag pages. If you\r\n    ommit those dashes, the whole post will appear on the homepage along with\r\n    other posts.\r\n\r\n    -----\r\n\r\n    This is the continuation of the post. This will be visible only on the\r\n    post page.\r\n\r\nSupported file extensions are `.md` and `.markdown`.\r\n\r\n## License\r\n\r\nideamark is lincensed under the MIT license.\r\n\r\n\r\n## Continuous Integration status\r\n\r\nThis project is tested with [Travis CI](http://travis-ci.org/).\r\n\r\n[![Build Status](https://secure.travis-ci.org/devtyr/ideamark.png)](http://travis-ci.org/devtyr/ideamark)\r\n\r\n\r\n## Upcoming Features\r\n\r\n- Option to exclude entries from being published\r\n- Improved way to organize ideas/concepts/documentations\r\n- Better templating support\r\n- Edit Markdown files online\r\n- Support Dropbox and other cloud stores\r\n- Versioning of documents\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}